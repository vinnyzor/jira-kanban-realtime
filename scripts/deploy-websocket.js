#!/usr/bin/env node

const { execSync } = require("child_process")
const fs = require("fs")
const path = require("path")

console.log("üöÄ Iniciando deploy do servidor WebSocket...")

// Verificar se Railway CLI est√° instalado
try {
  execSync("railway --version", { stdio: "ignore" })
} catch (error) {
  console.error("‚ùå Railway CLI n√£o encontrado. Instale com: npm install -g @railway/cli")
  process.exit(1)
}

// Verificar se est√° logado no Railway
try {
  execSync("railway whoami", { stdio: "ignore" })
} catch (error) {
  console.error("‚ùå N√£o est√° logado no Railway. Execute: railway login")
  process.exit(1)
}

// Verificar se existe projeto Railway
const hasProject = fs.existsSync(".railway")

if (!hasProject) {
  console.log("üì¶ Criando novo projeto no Railway...")
  execSync("railway new", { stdio: "inherit" })
}

// Configurar vari√°veis de ambiente
console.log("‚öôÔ∏è Configurando vari√°veis de ambiente...")
execSync("railway variables set NODE_ENV=production", { stdio: "inherit" })
execSync("railway variables set PORT=3001", { stdio: "inherit" })

// Deploy
console.log("üöÄ Fazendo deploy...")
execSync("railway up", { stdio: "inherit" })

// Obter URL do projeto
try {
  const domain = execSync("railway domain", { encoding: "utf8" }).trim()
  const websocketUrl = `wss://${domain}`

  console.log("\n‚úÖ Deploy conclu√≠do!")
  console.log(`üåê URL do WebSocket: ${websocketUrl}`)
  console.log("\nüìù Pr√≥ximos passos:")
  console.log(`1. Configure a vari√°vel NEXT_PUBLIC_WEBSOCKET_URL=${websocketUrl} na Vercel`)
  console.log("2. Fa√ßa o deploy do frontend: vercel --prod")
  console.log("3. Teste a aplica√ß√£o!")
} catch (error) {
  console.log("\n‚úÖ Deploy conclu√≠do!")
  console.log("üîß Configure o dom√≠nio personalizado no Railway Dashboard")
}
